name: Ubuntu CUDA Build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-24.04
    container:
      image: nvidia/cuda:12.8.0-devel-ubuntu24.04
    env:
      VCPKG_ROOT: ${{ github.workspace }}/../vcpkg

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install GCC 14 and dependencies
        run: |
          apt-get update

          # install cmake from https://apt.kitware.com to get cmake 3.30+
          
          apt-get install -y ca-certificates gpg wget 

          test -f /usr/share/doc/kitware-archive-keyring/copyright ||
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ noble main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null
          apt-get update

          test -f /usr/share/doc/kitware-archive-keyring/copyright ||
          rm /usr/share/keyrings/kitware-archive-keyring.gpg

          apt-get install -y kitware-archive-keyring

          apt-get install -y git curl unzip cmake gcc-14 g++-14 ccache ninja-build
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100 \
                              --slave /usr/bin/g++ g++ /usr/bin/g++-14

      - name: Setup vcpkg
        run: |
          apt-get update
          apt-get install -y zip tar pkg-config python3 python3-dev libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev
          cd ..
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

      - name: Cache LibTorch
        id: cache-libtorch
        uses: actions/cache@v4
        with:
          path: external/libtorch
          key: libtorch-2.7.0-cu128-${{ runner.os }}

      - name: Download LibTorch 2.7.0 (CUDA 12.8 build)
        if: steps.cache-libtorch.outputs.cache-hit != 'true'
        run: |
          mkdir -p external
          cd ..
          curl -L https://download.pytorch.org/libtorch/cu128/libtorch-cxx11-abi-shared-with-deps-2.7.0%2Bcu128.zip -o libtorch.zip
          unzip libtorch.zip -d $GITHUB_WORKSPACE/external

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: /github/home/.cache/ccache
          key: ccache-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Cache vcpkg binary archives
        uses: actions/cache@v4
        with:
          path: /github/home/.cache/vcpkg/archives
          key: vcpkg-binary-archives-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            vcpkg-binary-archives-${{ runner.os }}

      - name: Configure with CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -G Ninja

      - name: Build
        run: cmake --build build --parallel 1
